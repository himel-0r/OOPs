When an overloaded method is called, Java looks for a match between the arguments 
used to call the method and the method’s parameters. However, this match need not always 
be exact. In some cases, Java’s automatic type conversions can play a role in overload 
resolution

As you can see, this version of OverloadDemo does not define test(int). Therefore, 
when test( ) is called with an integer argument inside Overload, no matching method is 
found. However, Java can automatically convert an integer into a double, and this conversion 
can be used to resolve the call. Therefore, after test(int) is not found, Java elevates i to double
and then calls test(double). Of course, if test(int) had been defined, it would have been 
called instead. 